<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <context:component-scan base-package="hpu.edu.lileining"></context:component-scan>

    <!-- 静态资源(js、image等)的访问 -->
    <mvc:default-servlet-handler/>

    <mvc:annotation-driven conversion-service="conversionService" validator="validator">
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <!--<property name="converters">-->
            <!--<list>-->
                <!--&lt;!&ndash; 在这里可以定义多个转换-->
                <!--<bean class="cn.labelnet.ssm.controller.converter.FormatDateConverter"></bean>&ndash;&gt;-->
            <!--</list>-->
        <!--</property>-->
    </bean>

    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <!-- 配置hibernate校验器 -->
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"></property>
        <!-- 指定校验使用的资源文件，在文件中配置校验错误信息，如过不指定默认使用classpath下的ValidationMessages.properties -->
        <property name="validationMessageSource" ref="messageSource"></property>

    </bean>

    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <!-- 资源文件名:配置自己的验证信息 -->
        <property name="basenames">
            <list>
                <value>CustomValidationMessage</value>
            </list>
        </property>
        <!-- 资源文件编码格式 -->
        <property name="fileEncodings" value="utf-8"></property>
        <!-- 对资源文件内容缓存时间，单位秒 -->
        <property name="cacheSeconds" value="120"></property>
    </bean>

    <!--<bean class="yuan.ssm.exception.CustomExceptionResover"></bean>-->


    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 最大的上传尺寸 -->
        <property name="maxUploadSize" value="5242880"></property>
    </bean>



    <!--<mvc:interceptors>-->
        <!--&lt;!&ndash; 多个拦截器，顺序执行 &ndash;&gt;-->
        <!--<mvc:interceptor>-->
            <!--&lt;!&ndash; /** 表示所有的url，包括子url路径 &ndash;&gt;-->
            <!--<mvc:mapping path="/**"/>-->
            <!--&lt;!&ndash;<bean class="yuan.ssm.filter.LoginHandlerIntercepter"></bean>&ndash;&gt;-->
        <!--</mvc:interceptor>-->
        <!--&lt;!&ndash; 配置登陆拦截器-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<bean class="cn.labelnet.ssm.filter.LoginHandlerIntercepter"></bean>-->
        <!--</mvc:interceptor> &ndash;&gt;-->
    <!--</mvc:interceptors>-->


</beans>